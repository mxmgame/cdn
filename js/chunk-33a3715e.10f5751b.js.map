{"version":3,"sources":["webpack:///./src/assets/audio/42f888piCquQ.mp3","webpack:///./src/components/dice.vue?09a5","webpack:///./node_modules/howler/dist/howler.js","webpack:///./src/components/dice.vue?7745","webpack:///src/components/dice.vue","webpack:///./src/components/dice.vue?13ec","webpack:///./src/components/dice.vue?3cc9","webpack:///./src/components/audio-player.vue?a5cd","webpack:///./node_modules/vue-howler/dist/vue-howler.esm.js","webpack:///src/components/audio-player.vue","webpack:///./src/components/audio-player.vue?6e01","webpack:///./src/components/audio-player.vue"],"names":["module","exports","__webpack_require__","p","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_dice_vue_vue_type_style_index_0_id_e8767f02_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_dice_vue_vue_type_style_index_0_id_e8767f02_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","n","global","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","HowlerGlobal","this","init","prototype","self","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","window","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","i","length","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","test","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","checkOpera","userAgent","match","isOldOpera","parseInt","split","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","mp4","weba","webm","dolby","flac","_unlockAudio","shouldUnlock","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","source","createBufferSource","buffer","connect","destination","start","noteOn","resume","onended","disconnect","document","removeEventListener","_emit","addEventListener","_obtainHtml5Audio","pop","testPlay","play","Promise","then","catch","console","warn","audio","push","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","_resumeAfterSuspend","Howl","o","src","error","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","undefined","_xhrWithCredentials","xhrWithCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","slice","Sound","loadBuffer","internal","id","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","Math","max","_seek","duration","timeout","abs","stop","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_interval","args","index","indexOf","apply","fade","from","to","len","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","min","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","checkIE","_errorFn","_loadFn","splice","remCache","cache","on","events","off","isId","keys","Object","Array","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","howl","_parent","parent","create","createGain","createGainNode","_errorListener","_loadListener","code","ceil","__default","loadSound","data","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","xhr","XMLHttpRequest","open","withCredentials","responseType","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","standalone","_pos","_orientation","stereo","pan","pos","x","y","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_super","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner","render","_vm","_h","$createElement","_c","_self","staticClass","ref","style","animationDuration","diceStrat","attrs","_m","sources","audioSources","staticRenderFns","dicevue_type_script_lang_js_","name","props","isMiddle","default","Boolean","components","audioPlayer","audio_player","computed","methods","handelAnimatStop","value","isSuccess","_this","promise_default","a","resolve","reject","$Message","content","$t","top","$refs","togglePlayback","dicedom","transform","res","handeltiems","callback","components_dicevue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","staticStyle","display","_v","_s","progress","click","mathClamp$1","RangeError","objectValues","obj","ret","getOwnPropertySymbols","vue_howler_esm_hasOwnProperty","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","toObject","val","TypeError","shouldUseNative","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","order2","map","join","test3","forEach","letter","objectAssign$1","target","symbols","s","key","_typeof","Symbol","iterator","constructor","required","validator","every","formats","_howl","_polls","interval","hook","$data","_howlEvents","created","_initialize","beforeDestroy","_cleanup","watch","_playing","_sources","_reinitialize","_this2","howler","$emit","handler","details","_this3","resetSettings","poll","_event","unmute","toggleMute","setVolume","Error","setRate","setSeek","setProgress","vue_howler_esm","audio_playervue_type_script_lang_js_","mixins","components_audio_playervue_type_script_lang_js_"],"mappings":"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","file":"js/chunk-33a3715e.10f5751b.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/42f888piCquQ.afa11273.mp3\";","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dice.vue?vue&type=style&index=0&id=e8767f02&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dice.vue?vue&type=style&index=0&id=e8767f02&lang=scss&scoped=true&\"","/*!\n *  howler.js v2.1.1\n *  howlerjs.com\n *\n *  (c) 2013-2018, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this on certain browsers/devices.\n      var shouldUnlock = /iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk|Mobi|Chrome|Safari/i.test(self._navigator && self._navigator.userAgent);\n      if (self._audioUnlocked || !self.ctx || !shouldUnlock) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        for (var i=0; i<self.html5PoolSize; i++) {\n          var audioNode = new Audio();\n\n          // Mark this Audio object as unlocked to ensure it can get returned\n          // to the unlocked pool when released.\n          audioNode._unlocked = true;\n\n          // Add the audio node to the pool.\n          self._releaseHtml5Audio(audioNode);\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n        self.ctx.suspend().then(function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        });\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhrWithCredentials = o.xhrWithCredentials || false;\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload) {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended. \n        // If there is, play that sound. If not, continue as usual.  \n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = loop;\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passsed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = parseFloat(from);\n      to = parseFloat(to);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Make sure the volume is in the right bounds.\n        vol = Math.max(0, vol);\n        vol = Math.min(1, vol);\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            self._emit('seek', id);\n\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n          if (!checkIE) {\n            sounds[i]._node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n          }\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = 'auto';\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.withCredentials = self._xhrWithCredentials;\n      xhr.responseType = 'arraybuffer';\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && Howler._navigator.standalone && !safari || Howler._navigator && !Howler._navigator.standalone && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : 1, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Define globally in case AMD is not available or unused.\n  if (typeof window !== 'undefined') {\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  } else if (typeof global !== 'undefined') { // Add to global in Node.js (for testing, etc).\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.1.1\n *  howlerjs.com\n *\n *  (c) 2013-2018, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dice_inner animated fadeInDownBig\"},[_c('div',{staticClass:\"cubewrapp\"},[_c('div',{ref:\"dice_box\",staticClass:\"cubewrapp-inner\"},[_c('div',{ref:\"dicedom\",style:({animationDuration: _vm.diceStrat?'2s':'50s'}),attrs:{\"id\":\"dice\"}},[_vm._m(0),_c('div',{staticClass:\"side front inner\"}),_vm._m(1),_c('div',{staticClass:\"side top inner\"}),_vm._m(2),_c('div',{staticClass:\"side right inner\"}),_vm._m(3),_c('div',{staticClass:\"side left inner\"}),_vm._m(4),_c('div',{staticClass:\"side bottom inner\"}),_vm._m(5),_c('div',{staticClass:\"side back inner\"}),_c('div',{staticClass:\"side cover x\"}),_c('div',{staticClass:\"side cover y\"}),_c('div',{staticClass:\"side cover z\"})])])]),_c('audio-player',{ref:\"audio1\",attrs:{\"sources\":_vm.audioSources}})],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"side front\"},[_c('div',{staticClass:\"dot center redClor\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"side top\"},[_c('div',{staticClass:\"dot dtop dleft\"}),_c('div',{staticClass:\"dot dbottom dright\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"side right\"},[_c('div',{staticClass:\"dot dtop dleft\"}),_c('div',{staticClass:\"dot center\"}),_c('div',{staticClass:\"dot dbottom dright\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"side left\"},[_c('div',{staticClass:\"dot dtop redClor dleft\"}),_c('div',{staticClass:\"dot dtop redClor dright\"}),_c('div',{staticClass:\"dot dbottom redClor dleft\"}),_c('div',{staticClass:\"dot dbottom redClor dright\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"side bottom\"},[_c('div',{staticClass:\"dot center\"}),_c('div',{staticClass:\"dot dtop dleft\"}),_c('div',{staticClass:\"dot dtop dright\"}),_c('div',{staticClass:\"dot dbottom dleft\"}),_c('div',{staticClass:\"dot dbottom dright\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"side back\"},[_c('div',{staticClass:\"dot dtop dleft\"}),_c('div',{staticClass:\"dot dtop dright\"}),_c('div',{staticClass:\"dot dbottom dleft\"}),_c('div',{staticClass:\"dot dbottom dright\"}),_c('div',{staticClass:\"dot center dleft\"}),_c('div',{staticClass:\"dot center dright\"})])}]\n\nexport { render, staticRenderFns }","<!--dice-->\n\n<template>\n  <div class=\"dice_inner animated fadeInDownBig\">\n    <div class=\"cubewrapp\">\n      <div class=\"cubewrapp-inner\" ref=\"dice_box\">\n        <!-- //@webkitAnimationEnd='handelAnimatStop()' -->\n        <div id=\"dice\" ref=\"dicedom\" :style=\"{animationDuration: diceStrat?'2s':'50s'}\">\n          <div class=\"side front\">\n            <div class=\"dot center redClor\"></div>\n          </div>\n          <div class=\"side front inner\"></div>\n          <div class=\"side top\">\n            <div class=\"dot dtop dleft\"></div>\n            <div class=\"dot dbottom dright\"></div>\n          </div>\n          <div class=\"side top inner\"></div>\n          <div class=\"side right\">\n            <div class=\"dot dtop dleft\"></div>\n            <div class=\"dot center\"></div>\n            <div class=\"dot dbottom dright\"></div>\n          </div>\n          <div class=\"side right inner\"></div>\n          <div class=\"side left\">\n            <div class=\"dot dtop redClor dleft\"></div>\n            <div class=\"dot dtop redClor dright\"></div>\n            <div class=\"dot dbottom redClor dleft\"></div>\n            <div class=\"dot dbottom redClor dright\"></div>\n          </div>\n          <div class=\"side left inner\"></div>\n          <div class=\"side bottom\">\n            <div class=\"dot center\"></div>\n            <div class=\"dot dtop dleft\"></div>\n            <div class=\"dot dtop dright\"></div>\n            <div class=\"dot dbottom dleft\"></div>\n            <div class=\"dot dbottom dright\"></div>\n          </div>\n          <div class=\"side bottom inner\"></div>\n          <div class=\"side back\">\n            <div class=\"dot dtop dleft\"></div>\n            <div class=\"dot dtop dright\"></div>\n            <div class=\"dot dbottom dleft\"></div>\n            <div class=\"dot dbottom dright\"></div>\n            <div class=\"dot center dleft\"></div>\n            <div class=\"dot center dright\"></div>\n          </div>\n          <div class=\"side back inner\"></div>\n          <div class=\"side cover x\"></div>\n          <div class=\"side cover y\"></div>\n          <div class=\"side cover z\"></div>\n        </div>\n      </div>\n    </div>\n    <!-- <audio-player ref='audio1'></audio-player> -->\n    <audio-player ref=\"audio1\" :sources=\"audioSources\"></audio-player>\n  </div>\n</template>\n\n<script>\nimport audioPlayer from \"./audio-player\";\nexport default {\n  name: \"dice\",\n  props: {\n    // diceStrat: {\n    //   default: true,\n    //   type: Boolean\n    // },\n    isMiddle: {\n      default: false,\n      type: Boolean\n    }\n  },\n  data() {\n    return {\n      diceStrat: false,\n      audioSources: [\n        //  require(\"../assets/audio/chip-1.mp3\"),\n        require(\"../assets/audio/42f888piCquQ.mp3\")\n      ]\n    };\n  },\n\n  components: {\n    // 模板\n    audioPlayer\n  },\n\n  computed: {\n    // 计算属性\n  },\n\n  methods: {\n    // 方法\n    handelAnimatStop(value, isSuccess) {\n      this.diceStrat = true;\n      new Promise((resolve, reject) => {\n        let tiem1 = setTimeout(() => {\n          if (isSuccess) {\n            this.$Message.success({\n              content: this.$t('success'),\n              duration: 10,\n              top: 50\n            });\n            this.$refs[\"audio1\"].togglePlayback();\n          } else {\n            this.$Message.error({\n              content: this.$t('Nosucces'),\n              duration: 10\n            });\n          }\n\n          switch (\n            value //3 180\n          ) {\n            case 1:\n              //  console.debug(this.$refs.dicedom.id)\n              this.$refs.dicedom.style.animationDuration = \"0s\";\n              // this.$refs.dicedom.style.animationPlayState = 'paused'\n              break;\n            case 2:\n              this.$refs.dicedom.style.animationDuration = \"0s\";\n              this.$refs.dicedom.style.transform =\n                \"translateZ(-100px) rotateX(0deg) rotateY(90deg) rotate(270deg)\";\n\n              break;\n            case 3:\n              this.$refs.dicedom.style.animationDuration = \"0s\";\n              this.$refs.dicedom.style.transform =\n                \"translateZ(-100px) rotateX(0deg) rotateY(90deg) rotate(180deg)\";\n\n              break;\n            case 4:\n              this.$refs.dicedom.style.animationDuration = \"0s\";\n              this.$refs.dicedom.style.transform =\n                \"translateZ(-100px) rotateX(0deg) rotateY(90deg) rotate(0deg)\";\n              break;\n            case 5:\n              this.$refs.dicedom.style.animationDuration = \"0s\";\n              // this.$refs.dicedom.style.animationPlayState = 'paused'\n              this.$refs.dicedom.style.transform =\n                \"translateZ(-100px) rotateX(0deg) rotateY(90deg) rotate(90deg)\";\n\n              break;\n\n            default:\n              this.$refs.dicedom.style.animationDuration = \"0s\";\n              this.$refs.dicedom.style.transform =\n                \"translateZ(-100px) rotateX(180deg) rotateY(0) rotate(90deg)\";\n              break;\n          }\n          resolve(1);\n        }, 5000);\n      }).then(res => {\n        setTimeout(() => {\n          this.diceStrat = false;\n        }, 5000);\n      });\n    },\n    handeltiems(callback) {}\n  },\n  // beforeCreate:function(){\n  //     console.debug('1-beforeCreate 初始化之后');\n  // },\n  // created: function() {\n    // console.debug('2-created 创建完成');\n    \n  // }\n  // beforeMount:function(){\n  //     console.debug('3-beforeMount 挂载之前');\n  // },\n  // mounted:function(){\n  //     console.debug('4-mounted 被创建');\n  // },\n  // beforeUpdate:function(){\n  //     console.debug('5-beforeUpdate 数据更新前');\n  // },\n  // updated:function(){\n  //     console.debug('6-updated 被更新后');\n  // },\n  // activated:function(){\n  //     console.debug('7-activated');\n  // },\n  // deactivated:function(){\n  //     console.debug('8-deactivated');\n  // },\n  // beforeDestroy:function(){\n  //     console.debug('9-beforeDestroy 销毁之前');\n  // },\n  // destroyed:function(){\n  //     console.debug('10-destroyed 销毁之后')\n  // }\n};\n</script>\n<style lang='scss' scoped>\n.handelClickClass {\n  transform: scale(2.78) translate(80%, 58%) !important;\n  //  transform: ;\n  z-index: 999999;\n  position: relative;\n}\n.redClor {\n  background: red !important;\n  box-shadow: inset 3px 0 5px red !important;\n}\n.cubewrapp-inner {\n  display: block;\n  width: 100px;\n  height: 100px;\n}\n\n@media (max-width: 991px) {\n  .cubewrapp-inner {\n    -webkit-transform: scale(0.75);\n    transform: scale(0.75);\n  }\n}\n@media screen and (max-width: 767px) {\n  .cubewrapp {\n    width: 200px;\n    height: 200px;\n  }\n}\n\n@media screen and (max-width: 320px) {\n  .cubewrapp {\n    width: 150px;\n    height: 150px;\n  }\n}\n\n@media (max-width: 991px) {\n  .cubewrapp {\n    background-image: radial-gradient(\n      circle farthest-corner at 50% 50%,\n      #283753,\n      #172135 30%\n    );\n  }\n}\n\n.cubewrapp-inner {\n  display: block;\n  width: 100px;\n  height: 100px;\n}\n\n@media (max-width: 991px) {\n  .cubewrapp-inner {\n    -webkit-transform: scale(0.75);\n    transform: scale(0.75);\n  }\n}\n.cubewrapp {\n  position: relative;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  width: 200px;\n  height: 200px;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n  -ms-flex-direction: column;\n  flex-direction: column;\n  -webkit-box-pack: center;\n  -ms-flex-pack: center;\n  justify-content: center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  background-image: radial-gradient(\n    circle farthest-corner at 50% 50%,\n    #a3b9e2,\n    transparent 67%\n  );\n  // animation: dice-shadow 2s infinite;\n  -webkit-perspective: 1300px;\n  perspective: 1300px;\n\n  -webkit-perspective-origin: 50% 50%;\n  perspective-origin: 50% 50%;\n  margin: 0 auto;\n}\n// @keyframes dice-shadow {\n//   0% {\n//     background-image: radial-gradient(\n//       circle farthest-corner at 50% 50%,\n//       #6daab8,\n//       transparent 22%\n//     );\n//   }\n//   50% {\n//     background-image: radial-gradient(\n//       circle farthest-corner at 50% 50%,\n//       #6daab8,\n//       transparent 44%\n//     );\n//   }\n\n//   to {\n//     background-image: radial-gradient(\n//       circle farthest-corner at 50% 50%,\n//       #6daab8,\n//       transparent 67%\n//     );\n//   }\n// }\n\n.dice-slider {\n  position: relative;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  height: 20px;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n  -webkit-box-pack: center;\n  -ms-flex-pack: center;\n  justify-content: center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  border-radius: 6px;\n  -webkit-appearance: none;\n  width: 100%;\n  background: #1c2538 -webkit-gradient(linear, left top, right top, color-stop(0.5, #59b2e1), color-stop(0.5, #1c2538));\n}\n\n.dice-slider::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  opacity: 1;\n  cursor: pointer;\n  width: 30px;\n  height: 30px;\n  border-radius: 6px;\n  background-color: #f7f7f7;\n}\n\n.dice-slider::-moz-range-thumb {\n  -webkit-appearance: none;\n  opacity: 1;\n  z-index: -1;\n  cursor: pointer;\n  width: 30px;\n  height: 30px;\n  border-radius: 6px;\n  background-color: #f7f7f7;\n}\n\n.dice-slider::-moz-range-track {\n  background: #f85d5d;\n  height: 20px;\n  border-radius: 20px;\n}\n\n.dice-slider::-moz-range-progress {\n  background: #3ecf8e;\n  height: 20px;\n  border-radius: 20px;\n}\n\n.dice-slider.reverse::-moz-range-track {\n  background: #3ecf8e;\n}\n\n.dice-slider.reverse::-moz-range-progress {\n  background: #f85d5d;\n}\n\n.dice-autobetting.dropdown-menu {\n  height: 85px;\n  -webkit-transform-style: preserve-3d;\n  transform-style: preserve-3d;\n  opacity: 0;\n  display: none;\n  width: 340px;\n  color: #fff;\n  -webkit-transform: translateY(-100%);\n  transform: translateY(-100%);\n}\n\n.dice-roll-wrap.open .dropdown-menu {\n  height: 370px;\n  opacity: 1;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n}\n\nh6 {\n  font-size: 12px;\n  margin-top: 10px;\n  margin-top: 0;\n  margin-bottom: 0;\n  color: #fff;\n  font-size: 16px;\n  line-height: 18px;\n  font-weight: 600;\n}\n\n.number-of-spins {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  width: 105%;\n  max-width: 680px;\n  margin-bottom: 5px;\n  margin-left: -2.5%;\n  -webkit-box-pack: justify;\n  -ms-flex-pack: justify;\n  justify-content: space-between;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  -webkit-box-flex: 0;\n  -ms-flex: 0 0 auto;\n  flex: 0 0 auto;\n  font-size: 10px;\n  line-height: 16px;\n}\n\n.number-of-spins-slider {\n  height: 10px;\n  margin-bottom: 20px;\n}\n\n.number-of-spins-slider::-webkit-slider-thumb {\n  width: 20px;\n  height: 20px;\n}\n\n.number-of-spins-slider::-moz-range-thumb {\n  width: 20px;\n  height: 20px;\n}\n\n@-webkit-keyframes spin {\n  0% {\n    -webkit-transform: translateZ(-100px) rotateX(0deg) rotateY(0deg)\n      rotate(0deg);\n    transform: translateZ(-100px) rotateX(0deg) rotateY(0deg) rotate(0deg);\n  }\n\n  16% {\n    -webkit-transform: translateZ(-100px) rotateX(180deg) rotateY(180deg)\n      rotate(0deg);\n    transform: translateZ(-100px) rotateX(180deg) rotateY(180deg) rotate(0deg);\n  }\n\n  33% {\n    -webkit-transform: translateZ(-100px) rotateX(1turn) rotateY(90deg)\n      rotate(180deg);\n    transform: translateZ(-100px) rotateX(1turn) rotateY(90deg) rotate(180deg);\n  }\n\n  50% {\n    -webkit-transform: translateZ(-100px) rotateX(1turn) rotateY(1turn)\n      rotate(1turn);\n    transform: translateZ(-100px) rotateX(1turn) rotateY(1turn) rotate(1turn);\n  }\n\n  66% {\n    -webkit-transform: translateZ(-100px) rotateX(180deg) rotateY(1turn)\n      rotate(270deg);\n    transform: translateZ(-100px) rotateX(180deg) rotateY(1turn) rotate(270deg);\n  }\n\n  83% {\n    -webkit-transform: translateZ(-100px) rotateX(270deg) rotateY(180deg)\n      rotate(180deg);\n    transform: translateZ(-100px) rotateX(270deg) rotateY(180deg) rotate(180deg);\n  }\n\n  to {\n    -webkit-transform: translateZ(-100px) rotateX(1turn) rotateY(1turn)\n      rotate(1turn);\n    transform: translateZ(-100px) rotateX(1turn) rotateY(1turn) rotate(1turn);\n  }\n}\n\n@keyframes spin {\n  0% {\n    -webkit-transform: translateZ(-100px) rotateX(0deg) rotateY(0deg)\n      rotate(0deg);\n    transform: translateZ(-100px) rotateX(0deg) rotateY(0deg) rotate(0deg);\n  }\n\n  16% {\n    -webkit-transform: translateZ(-100px) rotateX(180deg) rotateY(180deg)\n      rotate(0deg);\n    transform: translateZ(-100px) rotateX(180deg) rotateY(180deg) rotate(0deg);\n  }\n\n  33% {\n    -webkit-transform: translateZ(-100px) rotateX(1turn) rotateY(90deg)\n      rotate(180deg);\n    transform: translateZ(-100px) rotateX(1turn) rotateY(90deg) rotate(180deg);\n  }\n\n  50% {\n    -webkit-transform: translateZ(-100px) rotateX(1turn) rotateY(1turn)\n      rotate(1turn);\n    transform: translateZ(-100px) rotateX(1turn) rotateY(1turn) rotate(1turn);\n  }\n\n  66% {\n    -webkit-transform: translateZ(-100px) rotateX(180deg) rotateY(1turn)\n      rotate(270deg);\n    transform: translateZ(-100px) rotateX(180deg) rotateY(1turn) rotate(270deg);\n  }\n\n  83% {\n    -webkit-transform: translateZ(-100px) rotateX(270deg) rotateY(180deg)\n      rotate(180deg);\n    transform: translateZ(-100px) rotateX(270deg) rotateY(180deg) rotate(180deg);\n  }\n\n  to {\n    -webkit-transform: translateZ(-100px) rotateX(1turn) rotateY(1turn)\n      rotate(1turn);\n    transform: translateZ(-100px) rotateX(1turn) rotateY(1turn) rotate(1turn);\n  }\n}\n\n@-webkit-keyframes spin-duplicate {\n  0% {\n    -webkit-transform: translateZ(-100px) rotateX(0deg) rotateY(0deg)\n      rotate(0deg);\n    transform: translateZ(-100px) rotateX(0deg) rotateY(0deg) rotate(0deg);\n  }\n\n  16% {\n    -webkit-transform: translateZ(-100px) rotateX(180deg) rotateY(180deg)\n      rotate(0deg);\n    transform: translateZ(-100px) rotateX(180deg) rotateY(180deg) rotate(0deg);\n  }\n\n  33% {\n    -webkit-transform: translateZ(-100px) rotateX(1turn) rotateY(90deg)\n      rotate(180deg);\n    transform: translateZ(-100px) rotateX(1turn) rotateY(90deg) rotate(180deg);\n  }\n\n  50% {\n    -webkit-transform: translateZ(-100px) rotateX(1turn) rotateY(1turn)\n      rotate(1turn);\n    transform: translateZ(-100px) rotateX(1turn) rotateY(1turn) rotate(1turn);\n  }\n\n  66% {\n    -webkit-transform: translateZ(-100px) rotateX(180deg) rotateY(1turn)\n      rotate(270deg);\n    transform: translateZ(-100px) rotateX(180deg) rotateY(1turn) rotate(270deg);\n  }\n\n  83% {\n    -webkit-transform: translateZ(-100px) rotateX(270deg) rotateY(180deg)\n      rotate(180deg);\n    transform: translateZ(-100px) rotateX(270deg) rotateY(180deg) rotate(180deg);\n  }\n\n  to {\n    -webkit-transform: translateZ(-100px) rotateX(1turn) rotateY(1turn)\n      rotate(1turn);\n    transform: translateZ(-100px) rotateX(1turn) rotateY(1turn) rotate(1turn);\n  }\n}\n\n@keyframes spin-duplicate {\n  0% {\n    -webkit-transform: translateZ(-100px) rotateX(0deg) rotateY(0deg)\n      rotate(0deg);\n    transform: translateZ(-100px) rotateX(0deg) rotateY(0deg) rotate(0deg);\n  }\n\n  16% {\n    -webkit-transform: translateZ(-100px) rotateX(180deg) rotateY(180deg)\n      rotate(0deg);\n    transform: translateZ(-100px) rotateX(180deg) rotateY(180deg) rotate(0deg);\n  }\n\n  33% {\n    -webkit-transform: translateZ(-100px) rotateX(1turn) rotateY(90deg)\n      rotate(180deg);\n    transform: translateZ(-100px) rotateX(1turn) rotateY(90deg) rotate(180deg);\n  }\n\n  50% {\n    -webkit-transform: translateZ(-100px) rotateX(1turn) rotateY(1turn)\n      rotate(1turn);\n    transform: translateZ(-100px) rotateX(1turn) rotateY(1turn) rotate(1turn);\n  }\n\n  66% {\n    -webkit-transform: translateZ(-100px) rotateX(180deg) rotateY(1turn)\n      rotate(270deg);\n    transform: translateZ(-100px) rotateX(180deg) rotateY(1turn) rotate(270deg);\n  }\n\n  83% {\n    -webkit-transform: translateZ(-100px) rotateX(270deg) rotateY(180deg)\n      rotate(180deg);\n    transform: translateZ(-100px) rotateX(270deg) rotateY(180deg) rotate(180deg);\n  }\n\n  to {\n    -webkit-transform: translateZ(-100px) rotateX(1turn) rotateY(1turn)\n      rotate(1turn);\n    transform: translateZ(-100px) rotateX(1turn) rotateY(1turn) rotate(1turn);\n  }\n}\n\n#dice span {\n  position: absolute;\n  margin: 50px 0 0 50px;\n  display: block;\n  font-size: 2.5em;\n  padding: 5px;\n}\n\n#dice {\n  -webkit-transform-style: preserve-3d;\n  transform-style: preserve-3d;\n  transition: all 6s linear;\n  transform: translateZ(-100px) rotateX(0deg) rotateY(0deg) rotate(0deg);\n  // -webkit-animation: spin 50s infinite linear;\n  animation: spin-duplicate 50s infinite linear;\n  // animation: spin 50s linear;\n}\n\n#dice,\n.side {\n  position: absolute;\n  width: 100px;\n  height: 100px;\n}\n\n.side {\n  background: #fff;\n  -webkit-box-shadow: inset 0 0 20px #ccc;\n  box-shadow: inset 0 0 20px #ccc;\n  border-radius: 20px;\n}\n\n#dice .cover,\n#dice .inner {\n  background: #e0e0e0;\n  -webkit-box-shadow: none;\n  box-shadow: none;\n}\n\n#dice .cover {\n  border-radius: 0;\n  -webkit-transform: translateZ(0);\n  transform: translateZ(0);\n}\n\n#dice .cover.x {\n  -webkit-transform: rotateY(90deg);\n  transform: rotateY(90deg);\n}\n\n#dice .cover.z {\n  -webkit-transform: rotateX(90deg);\n  transform: rotateX(90deg);\n}\n\n#dice .front {\n  -webkit-transform: translateZ(50px);\n  transform: translateZ(50px);\n}\n\n#dice .front.inner {\n  -webkit-transform: translateZ(49px);\n  transform: translateZ(49px);\n}\n\n#dice .back {\n  -webkit-transform: rotateX(-180deg) translateZ(50px);\n  transform: rotateX(-180deg) translateZ(50px);\n}\n\n#dice .back.inner {\n  -webkit-transform: rotateX(-180deg) translateZ(49px);\n  transform: rotateX(-180deg) translateZ(49px);\n}\n\n#dice .right {\n  -webkit-transform: rotateY(90deg) translateZ(50px);\n  transform: rotateY(90deg) translateZ(50px);\n}\n\n#dice .right.inner {\n  -webkit-transform: rotateY(90deg) translateZ(48px);\n  transform: rotateY(90deg) translateZ(48px);\n}\n\n#dice .left {\n  -webkit-transform: rotateY(-90deg) translateZ(50px);\n  transform: rotateY(-90deg) translateZ(50px);\n}\n\n#dice .left.inner {\n  -webkit-transform: rotateY(-90deg) translateZ(49px);\n  transform: rotateY(-90deg) translateZ(49px);\n}\n\n#dice .top {\n  -webkit-transform: rotateX(90deg) translateZ(50px);\n  transform: rotateX(90deg) translateZ(50px);\n}\n\n#dice .top.inner {\n  -webkit-transform: rotateX(90deg) translateZ(49px);\n  transform: rotateX(90deg) translateZ(49px);\n}\n\n#dice .bottom {\n  -webkit-transform: rotateX(-90deg) translateZ(50px);\n  transform: rotateX(-90deg) translateZ(50px);\n}\n\n#dice .bottom.inner {\n  -webkit-transform: rotateX(-90deg) translateZ(49px);\n  transform: rotateX(-90deg) translateZ(49px);\n}\n\n.dot {\n  position: absolute;\n  width: 23px;\n  height: 23px;\n  border-radius: 11px;\n  background: #444;\n  -webkit-box-shadow: inset 3px 0 5px #000;\n  box-shadow: inset 3px 0 5px #000;\n}\n\n.dot.center {\n  margin: 38px 0 0 38px;\n}\n\n.dot.dtop {\n  margin-top: 10px;\n}\n\n.dot.dleft {\n  margin-left: 67px;\n}\n\n.dot.dright {\n  margin-left: 10px;\n}\n\n.dot.dbottom {\n  margin-top: 67px;\n}\n\n.dot.center.dleft {\n  margin: 38px 0 0 10px;\n}\n\n.dot.center.dright {\n  margin: 38px 0 0 67px;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dice.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dice.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./dice.vue?vue&type=template&id=e8767f02&scoped=true&\"\nimport script from \"./dice.vue?vue&type=script&lang=js&\"\nexport * from \"./dice.vue?vue&type=script&lang=js&\"\nimport style0 from \"./dice.vue?vue&type=style&index=0&id=e8767f02&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e8767f02\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"display\":\"none\"}},[_c('span',[_vm._v(\"Total duration: \"+_vm._s(_vm.duration)+\" seconds\")]),_c('span',[_vm._v(\"Progress: \"+_vm._s((_vm.progress * 100))+\"%\")]),_c('button',{on:{\"click\":_vm.togglePlayback}},[_vm._v(_vm._s(_vm.playing ? 'Pause' : 'Play'))]),_c('button',{on:{\"click\":_vm.stop}},[_vm._v(\"Stop\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/*\n * vue-howler v0.7.0\n * (c) 2017 Mick Dekkers\n * Released under the MIT License.\n */\nimport { Howl } from 'howler';\n\n'use strict';\nvar mathClamp$1 = function (x, min, max) {\n\tif (min > max) {\n\t\tthrow new RangeError('`min` should be lower than `max`');\n\t}\n\n\treturn x < min ? min : x > max ? max : x;\n};\n\n'use strict';\nvar objectValues = function (obj) {\n\tvar keys = Object.keys(obj);\n\tvar ret = [];\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tret.push(obj[keys[i]]);\n\t}\n\n\treturn ret;\n};\n\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nvar objectAssign$1 = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\nvar babelHelpers = {};\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\nbabelHelpers;\n\nvar index = {\n  props: {\n    /**\n     * An array of audio file urls\n     */\n    sources: {\n      type: Array,\n      required: true,\n      validator: function validator(sources) {\n        // Every source must be a non-empty string\n        return sources.every(function (source) {\n          return typeof source === 'string' && source.length > 0;\n        });\n      }\n    },\n    /**\n     * Whether to start the playback\n     * when the component is mounted\n     */\n    autoplay: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Whether to start the playback again\n     * automatically after it is done playing\n     */\n    loop: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Whether to start downloading the audio\n     * file when the component is mounted\n     */\n    preload: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Whether to force HTML5 Audio\n     */\n    html5: {\n      type: Boolean,\n      default: false\n    },\n    /**\n    * An array of audio file types\n    */\n    formats: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    /**\n     * Whether to enable the withCredentials flag on XHR\n     * requests used to fetch audio files when using Web Audio API\n     */\n    xhrWithCredentials: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data: function data() {\n    var _this = this;\n\n    return {\n      /**\n       * The Howl instance used for playback\n       */\n      _howl: null,\n      /**\n       * Whether audio is currently playing\n       */\n      playing: false,\n      /**\n       * Whether the audio playback is muted\n       */\n      muted: false,\n      /**\n       * The volume of the playback on a scale of 0 to 1\n       */\n      volume: 1.0,\n      /**\n       * The rate (speed) of the playback on a scale of 0.5 to 4\n       */\n      rate: 1.0,\n      /**\n       * The position of playback in seconds\n       */\n      seek: 0,\n      /**\n       * The duration of the audio in seconds\n       */\n      duration: 0,\n      /**\n       * Functions that poll the Howl instance\n       * to update various data\n       */\n      _polls: {\n        seek: {\n          id: null,\n          interval: 1000 / 4, // 4 times per second (4Hz)\n          hook: function hook() {\n            _this.seek = _this.$data._howl.seek();\n          }\n        }\n      },\n      /**\n       * A list of howl events to listen to and\n       * functions to call when they are triggered\n       */\n      _howlEvents: [{\n        name: 'load',\n        hook: function hook() {\n          _this.duration = _this.$data._howl.duration();\n        }\n      }, 'loaderror', 'playerror', {\n        name: 'play',\n        hook: function hook() {\n          _this.playing = true;\n        }\n      }, {\n        name: 'end',\n        hook: function hook() {\n          _this.playing = false;\n        }\n      }, {\n        name: 'pause',\n        hook: function hook() {\n          _this.playing = false;\n        }\n      }, {\n        name: 'stop',\n        hook: function hook() {\n          _this.playing = false;\n          if (_this.$data._howl != null) {\n            _this.seek = _this.$data._howl.seek();\n          }\n        }\n      }, 'mute', {\n        name: 'volume',\n        hook: function hook() {\n          _this.volume = _this.$data._howl.volume();\n        }\n      }, {\n        name: 'rate',\n        hook: function hook() {\n          _this.rate = _this.$data._howl.rate();\n        }\n      }, {\n        name: 'seek',\n        hook: function hook() {\n          _this.seek = _this.$data._howl.seek();\n        }\n      }, 'fade']\n    };\n  },\n\n\n  computed: {\n    /**\n     * The progress of the playback on a scale of 0 to 1\n     */\n    progress: function progress() {\n      if (this.duration === 0) return 0;\n      return this.seek / this.duration;\n    }\n  },\n\n  created: function created() {\n    this._initialize();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this._cleanup();\n  },\n\n\n  watch: {\n    playing: function playing(_playing) {\n      // Update the seek\n      this.seek = this.$data._howl.seek();\n\n      if (_playing) {\n        // Start the seek poll\n        this.$data._polls.seek.id = setInterval(this.$data._polls.seek.hook, this.$data._polls.seek.interval);\n      } else {\n        // Stop the seek poll\n        clearInterval(this.$data._polls.seek.id);\n      }\n    },\n    sources: function sources(_sources) {\n      this._reinitialize();\n    }\n  },\n\n  methods: {\n    /**\n     * Reinitialize the Howler player\n     */\n    _reinitialize: function _reinitialize() {\n      this._cleanup(false);\n      this._initialize();\n    },\n\n    /**\n     * Initialize the Howler player\n     */\n    _initialize: function _initialize() {\n      var _this2 = this;\n\n      this.$data._howl = new Howl({\n        src: this.sources,\n        volume: this.volume,\n        html5: this.html5,\n        loop: this.loop,\n        preload: this.preload,\n        autoplay: this.autoplay,\n        mute: this.muted,\n        rate: this.rate,\n        format: this.formats,\n        xhrWithCredentials: this.xhrWithCredentials\n      });\n\n      var duration = this.$data._howl.duration();\n      this.duration = duration;\n\n      if (duration > 0) {\n        // The audio file(s) have been cached. Howler won't\n        // emit a load event, so we will do this manually\n        this.$emit('load');\n      }\n\n      // Bind to all Howl events\n      this.$data._howlEvents = this.$data._howlEvents.map(function (event) {\n        // Normalize string shorthands to objects\n        if (typeof event === 'string') {\n          event = { name: event };\n        }\n\n        // Create a handler\n        var handler = function handler(id, details) {\n          if (typeof event.hook === 'function') event.hook(id, details);\n          _this2.$emit(event.name, id, details);\n        };\n\n        // Bind the handler\n        _this2.$data._howl.on(event.name, handler);\n\n        // Return the name and handler to unbind later\n        return objectAssign$1({}, event, { handler: handler });\n      });\n    },\n\n    /**\n     * Clean up the Howler player\n     */\n    _cleanup: function _cleanup() {\n      var _this3 = this;\n\n      var resetSettings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      // Stop all playback\n      if (this.$data._howl) {\n        this.stop();\n      }\n\n      // Stop all polls\n      objectValues(this.$data._polls).forEach(function (poll) {\n        if (poll.id != null) clearInterval(poll.id);\n      });\n\n      // Clear all event listeners\n      this.$data._howlEvents.map(function (event) {\n        if (event.handler) {\n          if (_this3.$data._howl) {\n            _this3.$data._howl.off(event.name, event.handler);\n          }\n\n          var _event = objectAssign$1({}, event);\n          delete _event.handler;\n          return _event;\n        }\n\n        return event;\n      });\n\n      // Destroy the Howl instance\n      this.$data._howl = null;\n\n      this.duration = 0;\n\n      if (resetSettings) {\n        this.muted = false;\n        this.volume = 1.0;\n        this.rate = 1.0;\n      }\n    },\n\n    /**\n     * Start the playback\n     */\n    play: function play() {\n      if (!this.playing) this.$data._howl.play();\n    },\n\n    /**\n     * Pause the playback\n     */\n    pause: function pause() {\n      if (this.playing) this.$data._howl.pause();\n    },\n\n    /**\n     * Toggle playing or pausing the playback\n     */\n    togglePlayback: function togglePlayback() {\n      if (!this.playing) {\n        this.$data._howl.play();\n      } else {\n        this.$data._howl.pause();\n      }\n    },\n\n    /**\n     * Stop the playback (also resets the seek to 0)\n     */\n    stop: function stop() {\n      this.$data._howl.stop();\n    },\n\n    /**\n     * Mute the playback\n     */\n    mute: function mute() {\n      this.$data._howl.mute(true);\n      this.muted = true;\n    },\n\n    /**\n     * Unmute the playback\n     */\n    unmute: function unmute() {\n      this.$data._howl.mute(false);\n      this.muted = false;\n    },\n\n    /**\n     * Toggle muting and unmuting the playback\n     */\n    toggleMute: function toggleMute() {\n      this.$data._howl.mute(!this.muted);\n      this.muted = !this.muted;\n    },\n\n    /**\n     * Set the volume of the playback\n     * @param {Number} volume - The new volume.\n     * The value is clamped between 0 and 1\n     */\n    setVolume: function setVolume(volume) {\n      if (typeof volume !== 'number') {\n        throw new Error('volume must be a number, got a ' + (typeof volume === 'undefined' ? 'undefined' : _typeof(volume)) + ' instead');\n      }\n\n      this.$data._howl.volume(mathClamp$1(volume, 0, 1));\n    },\n\n    /**\n     * Set the rate (speed) of the playback\n     * @param {Number} rate - The new rate.\n     * The value is clamped between 0.5 and 4\n     */\n    setRate: function setRate(rate) {\n      if (typeof rate !== 'number') {\n        throw new Error('rate must be a number, got a ' + (typeof rate === 'undefined' ? 'undefined' : _typeof(rate)) + ' instead');\n      }\n\n      this.$data._howl.rate(mathClamp$1(rate, 0.5, 4));\n    },\n\n    /**\n     * Set the position of the playback\n     * @param {Number} seek - The new position in seconds.\n     * The value is clamped between 0 and the duration\n     */\n    setSeek: function setSeek(seek) {\n      if (typeof seek !== 'number') {\n        throw new Error('seek must be a number, got a ' + (typeof seek === 'undefined' ? 'undefined' : _typeof(seek)) + ' instead');\n      }\n\n      this.$data._howl.seek(mathClamp$1(seek, 0, this.duration));\n    },\n\n    /**\n     * Set the progress of the playback\n     * @param {Number} progress - The new progress.\n     * The value is clamped between 0 and 1\n     */\n    setProgress: function setProgress(progress) {\n      if (typeof progress !== 'number') {\n        throw new Error('progress must be a number, got a ' + (typeof progress === 'undefined' ? 'undefined' : _typeof(progress)) + ' instead');\n      }\n\n      this.setSeek(mathClamp$1(progress, 0, 1) * this.duration);\n    }\n  }\n};\n\nexport default index;\n","<script>\n  import VueHowler from 'vue-howler'\n\n  export default {\n    mixins: [VueHowler]\n  }\n</script>\n\n<template>\n  <div style='display:none'>\n    <span>Total duration: {{ duration }} seconds</span>\n    <span>Progress: {{ (progress * 100) }}%</span>\n    <button @click=\"togglePlayback\">{{ playing ? 'Pause' : 'Play' }}</button>\n    <button @click=\"stop\">Stop</button>\n  </div>\n</template>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./audio-player.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./audio-player.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./audio-player.vue?vue&type=template&id=47f50503&\"\nimport script from \"./audio-player.vue?vue&type=script&lang=js&\"\nexport * from \"./audio-player.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}